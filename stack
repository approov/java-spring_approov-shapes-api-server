#!/bin/sh

set -eu

Show_Help()
{
    ############################################################################
    # EXECUTION
    ############################################################################

    echo && cat ./docker/usage-help.txt && echo
}

Build_Docker_Image()
{
    ############################################################################
    # INPUT
    ############################################################################

    local docker_image="${1? Missing docker image name!!!}"


    ############################################################################
    # EXECUTION
    ############################################################################

    sudo docker build \
        --pull \
        --tag "${docker_image}" \
        ./docker
}

Docker_Container_Is_Running()
{
    ############################################################################
    # INPUT
    ############################################################################

      local container_name="${1? Missing container name!!!}"


    ############################################################################
    # EXECUTION
    ############################################################################

      sudo docker container ls -a | grep -qw "${container_name}" -

      return $?
}

Attach_To_App_Container()
{
    ############################################################################
    # INPUT
    ############################################################################

      local container_name="${1? Missing container name!!!}"

      local container_user="${2? Missing container user!!!}"

      local background_mode="${3? Missing backround mode to run the container!!!}"

      local run_command="${4? Missing command to run in the container!!!}"

      shift 4


    ############################################################################
    # EXECUTION
    ############################################################################

      sudo docker exec \
        --user ${container_user} \
        ${background_mode} \
        ${container_name} \
        ${run_command} ${@}
}


Start_Or_Attach_To_App_Container()
{
    ############################################################################
    # INPUT
    ############################################################################

    local container_name="${1? Missing container name !!!}"

    local container_user="${2? Missing container user !!!}"

    local http_port_map="${3? Missing the http port host:container !!!}"

    local https_port_map="${4? Missing the https port map host:container !!!}"

    local background_mode="${5? Missing backround mode to run the container !!!}"

    local docker_image="${6? Missing docker image name !!!}"

    local run_command="${7? Missing command to run in the docker container !!!}"

    shift 7


    ############################################################################
    # EXECUTION
    ############################################################################

    mkdir -p "${PWD}"/.local/.gradle

    if Docker_Container_Is_Running "${container_name}" ; then
        Attach_To_App_Container \
          "${container_name}" \
          "${container_user}" \
          "${background_mode}" \
          "${run_command}"
          "${@}"

        return
    fi

    sudo docker run \
        -it \
        --rm \
        --user "${container_user}" \
        --env-file .env \
        --name "${container_name}" \
        --publish "127.0.0.1:${http_port_map}" \
        --publish "127.0.0.1:${https_port_map}" \
        --volume "$PWD:/home/java/workspace" \
        --volume "${PWD}/.local/.gradle:/home/java/.gradle" \
        approov/java-spring-demo:11-slim ${run_command}
}

Main()
{
    ############################################################################
    # CONSTANTS
    ############################################################################

    local DOCKER_IMAGE="approov/java-spring-demo:11-slim"

    local CONTAINER_NAME="java-spring-demo"


    ############################################################################
    # INPUT / EXECUTION
    ############################################################################

    local container_user="$(id -u)"

    local http_port_map=5000:5000
    local https_port_map=5443:5443

    local background_mode="-it"

    for input in "${@}"; do
        case "${input}" in

            -d | --detached )
              background_mode="--detach"
              shift 1
            ;;

            -h | --help )
                Show_Help
                exit 0
            ;;

            --http )
                http_port_map="${2? Missing HTTP port map host:container}"
                shift 2
            ;;

            --https )
                https_port_map="${2? Missing HTTPS port host:container}"
                shift 2
            ;;

            -u | --user)
                container_user="${2? Missing user name or uid to use inside the container}"
                shift 2
            ;;

            build)
                Build_Docker_Image "${DOCKER_IMAGE}"
                exit 0
            ;;

            down )
                sudo docker container stop "java-spring-demo"
                exit 0
            ;;

            shell )
                Start_Or_Attach_To_App_Container \
                    "${CONTAINER_NAME}" \
                    "${container_user}" \
                    "${http_port_map}" \
                    "${https_port_map}" \
                    "${background_mode}" \
                    "${DOCKER_IMAGE}" \
                    "${2:-zsh}"

                exit 0
            ;;

            up )
                Start_Or_Attach_To_App_Container \
                    "${CONTAINER_NAME}" \
                    "${container_user}" \
                    "${http_port_map}" \
                    "${https_port_map}" \
                    "${background_mode}" \
                    "${DOCKER_IMAGE}" \
                    "./gradlew bootRun"

                exit 0
            ;;
        esac
    done

    Show_Help
}

Main "${@}"
